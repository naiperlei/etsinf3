(defglobal ?*nod-gen* = 0)
(defglobal ?*prof* = 60)
(deffacts mapa
	(limite 9 6)
	(contenedor 1 5)
	(contenedor 1 3)
	(contenedor 2 1)
	(contenedor 4 3)
	(contenedor 4 5)
	(contenedor 6 1)
	(contenedor 7 5)
	(contenedor 8 1)
	(contenedor 8 3)
        (contenedor 7 4)
        (contenedor 5 1)
	(posiciones  p 5 6 p 2 3  p 2 2)
	(juego pos 2 2 lata l 3 1 l 3 3 l 6 4 l 5 3 l 7 3 nivel 0)
)

(deffunction inicio()
	(reset)
	(printout t "Profundidad Máxima:= ")
	(bind ?prof (read))
	(printout t "Tipo de Búsqueda " crlf "1.- Anchura" crlf
		    "2.- Profundidad" crlf)
	(bind ?a (read))
	(if (= ?a 1)
		then (set-strategy breadth)
		else (set-strategy depth))
	(assert (profundidad-maxima ?prof))
)
(defrule mover_derecha
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(not(member$(create$ l (+ ?x 1) ?y) $?w)))
	(not(contenedor =(+ ?x 1) ?y))
	(test (< ?x ?lx))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos (+ ?x 1) ?y lata $?w nivel (+ ?n 1)))
)
(defrule mover_izquierda
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(not(member$(create$ l (- ?x 1) ?y) $?w)))
	(not(contenedor =(- ?x 1) ?y))
	(test (> ?x 0))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos (- ?x 1) ?y lata $?w nivel (+ ?n 1)))
)
(defrule mover_arriba
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(not(member$(create$ l ?x (+ ?y 1)) $?w)))
	(not(contenedor ?x =(+ ?y 1)))
	(test (< ?y ?ly))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos ?x (+ ?y 1) lata $?w nivel (+ ?n 1)))
)
(defrule mover_abajo
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(not(member$(create$ l ?x (- ?y 1)) $?w)))
	(not(contenedor ?x =(- ?y 1)))
	(test (> ?y 0))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos ?x (- ?y 1) lata $?w nivel (+ ?n 1)))
)
(defrule derecha-abajo
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(not(member$(create$ l (+ ?x 1) (- ?y 1)) $?w)))
	(not(contenedor =(+ ?x 1) =(- ?y 1)))
	(test (< ?x ?lx))
	(test (> ?y 0))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos (+ ?x 1) (- ?y 1) lata $?w nivel (+ ?n 1)))
)

(defrule empujar_derecha
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(member$(create$ l (+ ?x 1) ?y) $?w))
	(test(not(member$(create$ l (+ ?x 2) ?y) $?w)))
	(not(contenedor =(+ ?x 2) ?y))
	(test (< ?x ?lx))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos (+ ?x 1) ?y lata (replace-member$ $?w (create$ l (+ ?x 2) ?y) (create$ l (+ ?x 1) ?y)) nivel (+ ?n 1)))
)
(defrule empujar_izquierda
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(member$(create$ l (- ?x 1) ?y) $?w))
	(test(not(member$(create$ l (- ?x 2) ?y) $?w)))
	(not(contenedor =(- ?x 2) ?y))
	(test (> ?x 0))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos (- ?x 1) ?y lata (replace-member$ $?w (create$ l (- ?x 2) ?y) (create$ l (- ?x 1) ?y)) nivel (+ ?n 1)))
)
(defrule empujar_arriba
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(member$(create$ l ?x (+ ?y 1)) $?w))
	(test(not(member$(create$ l ?x (+ ?y 2)) $?w)))
	(not(contenedor ?x =(+ ?y 2)))
	(test (< ?y ?ly))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos ?x (+ ?y 1) lata (replace-member$ $?w (create$ l ?x (+ ?y 2)) (create$ l ?x (+ ?y 1))) nivel (+ ?n 1)))
)
(defrule empujar_abajo
	(juego pos ?x ?y lata $?w nivel ?n)
	(limite ?lx ?ly)
	(test(member$(create$ l ?x (- ?y 1)) $?w))
	(test(not(member$(create$ l ?x (- ?y 2)) $?w)))
	(not(contenedor ?x =(- ?y 2)))
	(test (> ?y 0))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos ?x (- ?y 1) lata (replace-member$ $?w (create$ l ?x (- ?y 2)) (create$ l ?x (- ?y 1))) nivel (+ ?n 1)))
)
(defrule contenedor_derecha
	(juego pos ?x ?y lata $?w nivel ?n)
	(test(member$(create$ l (+ ?x 1) ?y) $?w))
	(contenedor =(+ ?x 2) ?y)
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos (+ ?x 1) ?y lata (delete-member$ $?w (create$ l (+ ?x 1) ?y)) nivel (+ ?n 1)))
)
(defrule contenedor_izquierda
	(juego pos ?x ?y lata $?w nivel ?n)
	(test(member$(create$ l (- ?x 1) ?y) $?w))
	(contenedor =(- ?x 2) ?y)
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos (- ?x 1) ?y lata (delete-member$ $?w (create$ l (- ?x 1) ?y)) nivel (+ ?n 1)))
)
(defrule contenedor_arriba
	(juego pos ?x ?y lata $?w nivel ?n)
	(test(member$(create$ l ?x (+ ?y 1)) $?w))
	(contenedor ?x =(+ ?y 2))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos ?x (+ ?y 1) lata (delete-member$ $?w (create$ l ?x (+ ?y 1))) nivel (+ ?n 1)))
)
(defrule contenedor_abajo
	(juego pos ?x ?y lata $?w nivel ?n)
	(test(member$(create$ l ?x (- ?y 1)) $?w))
	(contenedor ?x =(- ?y 2))
	(profundidad-maxima ?prof)
	(test (< ?n ?prof))
	=>
	(bind ?*nod-gen* (+ ?*nod-gen* 1))
	(assert(juego pos ?x (- ?y 1) lata (delete-member$ $?w (create$ l ?x (- ?y 1))) nivel (+ ?n 1)))
)
(defrule no_solucion
	(declare (salience -99))
	(juego pos $? lata $? nivel ?n )
	=>
	(printout t "SOLUCION NO ENCONTRADA" crlf)
	(printout t "NODOS GENERADOS: " ?*nod-gen* crlf)
	(halt)
)
(defrule objetivo
	(declare (salience 100))
	?f <-(juego pos (posiciones (create$( p ?x ?y) $?z)) lata nivel ?n)
	=>
	(printout t "SOLUCION ENCONTRADA EN EL NIVEL " ?n crlf)
	(printout t "NUM DE NODOS EXPANDIDOS O REGLAS DISPARADAS " ?*nod-gen* crlf)
	(halt)
)
